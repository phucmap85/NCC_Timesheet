import { MigrationInterface, QueryRunner } from "typeorm";

export class Initialization1755966387223 implements MigrationInterface {
    name = 'Initialization1755966387223'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP FOREIGN KEY \`role_permissions_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`timesheets_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`timesheets_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`timesheets_ibfk_3\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP FOREIGN KEY \`project_tasks_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP FOREIGN KEY \`project_tasks_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP FOREIGN KEY \`project_target_users_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP FOREIGN KEY \`project_target_users_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP FOREIGN KEY \`projects_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP FOREIGN KEY \`project_users_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP FOREIGN KEY \`project_users_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`users_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`users_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`users_ibfk_3\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP FOREIGN KEY \`user_roles_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP FOREIGN KEY \`user_roles_ibfk_2\``);
        await queryRunner.query(`DROP INDEX \`code\` ON \`positions\``);
        await queryRunner.query(`DROP INDEX \`name\` ON \`positions\``);
        await queryRunner.query(`DROP INDEX \`shortName\` ON \`positions\``);
        await queryRunner.query(`DROP INDEX \`code\` ON \`branches\``);
        await queryRunner.query(`DROP INDEX \`displayName\` ON \`branches\``);
        await queryRunner.query(`DROP INDEX \`name\` ON \`branches\``);
        await queryRunner.query(`DROP INDEX \`code\` ON \`clients\``);
        await queryRunner.query(`DROP INDEX \`name\` ON \`tasks\``);
        await queryRunner.query(`DROP INDEX \`approvedBy\` ON \`timesheets\``);
        await queryRunner.query(`DROP INDEX \`projectTaskId\` ON \`timesheets\``);
        await queryRunner.query(`DROP INDEX \`userId\` ON \`timesheets\``);
        await queryRunner.query(`DROP INDEX \`taskId\` ON \`project_tasks\``);
        await queryRunner.query(`DROP INDEX \`projectId\` ON \`project_target_users\``);
        await queryRunner.query(`DROP INDEX \`code\` ON \`projects\``);
        await queryRunner.query(`DROP INDEX \`customerId\` ON \`projects\``);
        await queryRunner.query(`DROP INDEX \`name\` ON \`projects\``);
        await queryRunner.query(`DROP INDEX \`projectId\` ON \`project_users\``);
        await queryRunner.query(`DROP INDEX \`branchId\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`emailAddress\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`managerId\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`phoneNumber\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`positionId\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`userName\` ON \`users\``);
        await queryRunner.query(`DROP INDEX \`roleId\` ON \`user_roles\``);
        await queryRunner.query(`DROP INDEX \`displayName\` ON \`roles\``);
        await queryRunner.query(`DROP INDEX \`name\` ON \`roles\``);
        await queryRunner.query(`DROP INDEX \`normalizedName\` ON \`roles\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD UNIQUE INDEX \`IDX_5c70dc5aa01e351730e4ffc929\` (\`name\`)`);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD UNIQUE INDEX \`IDX_fd32ed2ba8f1c7d95070a8e1bc\` (\`shortName\`)`);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD UNIQUE INDEX \`IDX_e21258bdc3692b44960c623940\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD UNIQUE INDEX \`IDX_8387ed27b3d4ca53ec3fc7b029\` (\`name\`)`);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD UNIQUE INDEX \`IDX_a9fadd4a9d689a738582cdfc61\` (\`displayName\`)`);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD UNIQUE INDEX \`IDX_9c06cbb83feb2f0be6263bd47e\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD UNIQUE INDEX \`IDX_5b84bb456aa7fc9241c5d8277d\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD UNIQUE INDEX \`IDX_396d500ff7f1b82771ddd812fd\` (\`name\`)`);
        await queryRunner.query(`ALTER TABLE \`tasks\` CHANGE \`isDeleted\` \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`billable\` \`billable\` tinyint NOT NULL DEFAULT 1`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`isCharged\` \`isCharged\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`typeOfWork\` \`typeOfWork\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`isTemp\` \`isTemp\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` CHANGE \`billable\` \`billable\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD UNIQUE INDEX \`IDX_2187088ab5ef2a918473cb9900\` (\`name\`)`);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD UNIQUE INDEX \`IDX_d95a87318392465ab663a32cc4\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`projectType\` \`projectType\` int NOT NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`status\` \`status\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`notifyChannel\` \`notifyChannel\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMSubmitTS\` \`isNoticeKMSubmitTS\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMRequestOffDate\` \`isNoticeKMRequestOffDate\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMApproveRequestOffDate\` \`isNoticeKMApproveRequestOffDate\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMRequestChangeWorkingTime\` \`isNoticeKMRequestChangeWorkingTime\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMApproveChangeWorkingTime\` \`isNoticeKMApproveChangeWorkingTime\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isAllUserBelongTo\` \`isAllUserBelongTo\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isAllowTeamBuilding\` \`isAllowTeamBuilding\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_users\` CHANGE \`isTemp\` \`isTemp\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`project_users\` CHANGE \`type\` \`type\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD UNIQUE INDEX \`IDX_226bb9aa7aa8a69991209d58f5\` (\`userName\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD UNIQUE INDEX \`IDX_0a15e52405edda3ea73124ab40\` (\`emailAddress\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD UNIQUE INDEX \`IDX_1e3d0240b49c40521aaeb95329\` (\`phoneNumber\`)`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`sex\` \`sex\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`type\` \`type\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`allowedLeaveDay\` \`allowedLeaveDay\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`isActive\` \`isActive\` tinyint NOT NULL DEFAULT 1`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`isWorkingTimeDefault\` \`isWorkingTimeDefault\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD UNIQUE INDEX \`IDX_648e3f5447f725579d7d4ffdfb\` (\`name\`)`);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD UNIQUE INDEX \`IDX_aff64ec03f5b7263d7ed8e99b9\` (\`displayName\`)`);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD UNIQUE INDEX \`IDX_424b37a61f4d82c7fba1119ef7\` (\`normalizedName\`)`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`deletedAt\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD CONSTRAINT \`FK_b4599f8b8f548d35850afa2d12c\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`FK_febd9f329a975672fa9a1f4448a\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`FK_69778d33219d3c133ef59bbb535\` FOREIGN KEY (\`projectTaskId\`) REFERENCES \`project_tasks\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`FK_d717ea422761acf70e4d7ac6165\` FOREIGN KEY (\`approvedBy\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD CONSTRAINT \`FK_8691c10b6396e041f4b6d48f8a0\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD CONSTRAINT \`FK_384d8a4f974230542e9534fade2\` FOREIGN KEY (\`taskId\`) REFERENCES \`tasks\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD CONSTRAINT \`FK_ddfaba67da825f0075080a98d28\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD CONSTRAINT \`FK_03836464f388ab18413c85a34f2\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD CONSTRAINT \`FK_1699d6164673cbc856b9107b847\` FOREIGN KEY (\`customerId\`) REFERENCES \`clients\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD CONSTRAINT \`FK_6ebc83af455ff1ed9573c823e23\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD CONSTRAINT \`FK_1905d9d76173d09c07ba1f0cd84\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_7d5b477d15c01b6b44f1b4e8cc4\` FOREIGN KEY (\`positionId\`) REFERENCES \`positions\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_246426dfd001466a1d5e47322f4\` FOREIGN KEY (\`branchId\`) REFERENCES \`branches\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_874662e039ab7d31a71450eb501\` FOREIGN KEY (\`managerId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD CONSTRAINT \`FK_472b25323af01488f1f66a06b67\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD CONSTRAINT \`FK_86033897c009fcca8b6505d6be2\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP FOREIGN KEY \`FK_86033897c009fcca8b6505d6be2\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP FOREIGN KEY \`FK_472b25323af01488f1f66a06b67\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_874662e039ab7d31a71450eb501\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_246426dfd001466a1d5e47322f4\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_7d5b477d15c01b6b44f1b4e8cc4\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP FOREIGN KEY \`FK_1905d9d76173d09c07ba1f0cd84\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP FOREIGN KEY \`FK_6ebc83af455ff1ed9573c823e23\``);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP FOREIGN KEY \`FK_1699d6164673cbc856b9107b847\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP FOREIGN KEY \`FK_03836464f388ab18413c85a34f2\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP FOREIGN KEY \`FK_ddfaba67da825f0075080a98d28\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP FOREIGN KEY \`FK_384d8a4f974230542e9534fade2\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP FOREIGN KEY \`FK_8691c10b6396e041f4b6d48f8a0\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`FK_d717ea422761acf70e4d7ac6165\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`FK_69778d33219d3c133ef59bbb535\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP FOREIGN KEY \`FK_febd9f329a975672fa9a1f4448a\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP FOREIGN KEY \`FK_b4599f8b8f548d35850afa2d12c\``);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`roles\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP INDEX \`IDX_424b37a61f4d82c7fba1119ef7\``);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP INDEX \`IDX_aff64ec03f5b7263d7ed8e99b9\``);
        await queryRunner.query(`ALTER TABLE \`roles\` DROP INDEX \`IDX_648e3f5447f725579d7d4ffdfb\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`users\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`isWorkingTimeDefault\` \`isWorkingTimeDefault\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`isActive\` \`isActive\` tinyint(1) NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`allowedLeaveDay\` \`allowedLeaveDay\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`type\` \`type\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`sex\` \`sex\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` DROP INDEX \`IDX_1e3d0240b49c40521aaeb95329\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP INDEX \`IDX_0a15e52405edda3ea73124ab40\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP INDEX \`IDX_226bb9aa7aa8a69991209d58f5\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_users\` CHANGE \`type\` \`type\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`project_users\` CHANGE \`isTemp\` \`isTemp\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isAllowTeamBuilding\` \`isAllowTeamBuilding\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isAllUserBelongTo\` \`isAllUserBelongTo\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMApproveChangeWorkingTime\` \`isNoticeKMApproveChangeWorkingTime\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMRequestChangeWorkingTime\` \`isNoticeKMRequestChangeWorkingTime\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMApproveRequestOffDate\` \`isNoticeKMApproveRequestOffDate\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMRequestOffDate\` \`isNoticeKMRequestOffDate\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`isNoticeKMSubmitTS\` \`isNoticeKMSubmitTS\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`notifyChannel\` \`notifyChannel\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`status\` \`status\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`projects\` CHANGE \`projectType\` \`projectType\` int NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP INDEX \`IDX_d95a87318392465ab663a32cc4\``);
        await queryRunner.query(`ALTER TABLE \`projects\` DROP INDEX \`IDX_2187088ab5ef2a918473cb9900\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` CHANGE \`billable\` \`billable\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`isTemp\` \`isTemp\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`typeOfWork\` \`typeOfWork\` int NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`isCharged\` \`isCharged\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` CHANGE \`billable\` \`billable\` tinyint(1) NULL DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`tasks\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`tasks\` CHANGE \`isDeleted\` \`isDeleted\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`tasks\` DROP INDEX \`IDX_396d500ff7f1b82771ddd812fd\``);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`clients\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`clients\` DROP INDEX \`IDX_5b84bb456aa7fc9241c5d8277d\``);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`branches\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP INDEX \`IDX_9c06cbb83feb2f0be6263bd47e\``);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP INDEX \`IDX_a9fadd4a9d689a738582cdfc61\``);
        await queryRunner.query(`ALTER TABLE \`branches\` DROP INDEX \`IDX_8387ed27b3d4ca53ec3fc7b029\``);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`positions\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP INDEX \`IDX_e21258bdc3692b44960c623940\``);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP INDEX \`IDX_fd32ed2ba8f1c7d95070a8e1bc\``);
        await queryRunner.query(`ALTER TABLE \`positions\` DROP INDEX \`IDX_5c70dc5aa01e351730e4ffc929\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`deletedAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`deletedAt\` timestamp(0) NULL`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`updatedAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD \`createdAt\` timestamp(0) NULL DEFAULT 'now()'`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`normalizedName\` ON \`roles\` (\`normalizedName\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`name\` ON \`roles\` (\`name\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`displayName\` ON \`roles\` (\`displayName\`)`);
        await queryRunner.query(`CREATE INDEX \`roleId\` ON \`user_roles\` (\`roleId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`userName\` ON \`users\` (\`userName\`)`);
        await queryRunner.query(`CREATE INDEX \`positionId\` ON \`users\` (\`positionId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`phoneNumber\` ON \`users\` (\`phoneNumber\`)`);
        await queryRunner.query(`CREATE INDEX \`managerId\` ON \`users\` (\`managerId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`emailAddress\` ON \`users\` (\`emailAddress\`)`);
        await queryRunner.query(`CREATE INDEX \`branchId\` ON \`users\` (\`branchId\`)`);
        await queryRunner.query(`CREATE INDEX \`projectId\` ON \`project_users\` (\`projectId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`name\` ON \`projects\` (\`name\`)`);
        await queryRunner.query(`CREATE INDEX \`customerId\` ON \`projects\` (\`customerId\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`code\` ON \`projects\` (\`code\`)`);
        await queryRunner.query(`CREATE INDEX \`projectId\` ON \`project_target_users\` (\`projectId\`)`);
        await queryRunner.query(`CREATE INDEX \`taskId\` ON \`project_tasks\` (\`taskId\`)`);
        await queryRunner.query(`CREATE INDEX \`userId\` ON \`timesheets\` (\`userId\`)`);
        await queryRunner.query(`CREATE INDEX \`projectTaskId\` ON \`timesheets\` (\`projectTaskId\`)`);
        await queryRunner.query(`CREATE INDEX \`approvedBy\` ON \`timesheets\` (\`approvedBy\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`name\` ON \`tasks\` (\`name\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`code\` ON \`clients\` (\`code\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`name\` ON \`branches\` (\`name\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`displayName\` ON \`branches\` (\`displayName\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`code\` ON \`branches\` (\`code\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`shortName\` ON \`positions\` (\`shortName\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`name\` ON \`positions\` (\`name\`)`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`code\` ON \`positions\` (\`code\`)`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD CONSTRAINT \`user_roles_ibfk_2\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`user_roles\` ADD CONSTRAINT \`user_roles_ibfk_1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`users_ibfk_3\` FOREIGN KEY (\`managerId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`users_ibfk_2\` FOREIGN KEY (\`branchId\`) REFERENCES \`branches\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`users_ibfk_1\` FOREIGN KEY (\`positionId\`) REFERENCES \`positions\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD CONSTRAINT \`project_users_ibfk_2\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_users\` ADD CONSTRAINT \`project_users_ibfk_1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`projects\` ADD CONSTRAINT \`projects_ibfk_1\` FOREIGN KEY (\`customerId\`) REFERENCES \`clients\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD CONSTRAINT \`project_target_users_ibfk_2\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_target_users\` ADD CONSTRAINT \`project_target_users_ibfk_1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD CONSTRAINT \`project_tasks_ibfk_2\` FOREIGN KEY (\`taskId\`) REFERENCES \`tasks\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`project_tasks\` ADD CONSTRAINT \`project_tasks_ibfk_1\` FOREIGN KEY (\`projectId\`) REFERENCES \`projects\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`timesheets_ibfk_3\` FOREIGN KEY (\`approvedBy\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`timesheets_ibfk_2\` FOREIGN KEY (\`projectTaskId\`) REFERENCES \`project_tasks\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`timesheets\` ADD CONSTRAINT \`timesheets_ibfk_1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`role_permissions\` ADD CONSTRAINT \`role_permissions_ibfk_1\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
    }

}
